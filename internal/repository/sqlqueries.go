package repository

const (
	QTreeComboList               = "SELECT ID, NAME, CREATE_TIME, P_ID, TYPE FROM DATABASE"
	QProxyPresets                = "SELECT ID, NAME, CREATE_TIME FROM PROXY"
	QGetDatabaseType             = "SELECT TYPE FROM DATABASE WHERE ID = $1"
	QGetDatabaseLinks            = "SELECT ID, LINK, LINK_TYPE FROM DATABASE_LINK WHERE DATABASE_ID = $1 AND STATUS = 'ST1'"
	QGetProxyPresetLinks         = "SELECT ID, LINK, LINK_TYPE FROM PROXY_LINK WHERE PROXY_ID = $1 AND LINK_TYPE = 'LT2'"
	QUpdateDatabaseLinkStatus    = "UPDATE DATABASE_LINK SET STATUS = $1, ERR_TXT = $2 WHERE DATABASE_ID = $3 AND ID = $4"
	QUpdateProxyPresetLinkStatus = "UPDATE PROXY_LINK SET STATUS = $1, ERR_TXT = $2 WHERE PROXY_ID = $3 AND ID = $4"

	QGetSessions = `
		SELECT 
			S.ID, S.NAME, S.CREATE_TIME, S.STATUS, M.NAME||'('||R.NAME||')' module 
		FROM SESSION S
		LEFT JOIN MODULE M ON S.MODULE_ID = M.ID
		LEFT JOIN REFERENCE R ON M.TYPE = R.ID 
	`

	QGetMdules = `
		SELECT 
			M.ID, M.NAME, M.CREATE_TIME, M.VERSION, M.AUTHOR, 
			IIF(M.TYPE = 'MT2', 'HOST@USER:PASS', R.NAME) data_type, RT.NAME type	
		FROM MODULE M
		LEFT JOIN REFERENCE R ON M.DATA_TYPE = R.ID
		LEFT JOIN REFERENCE RT ON M.TYPE = RT.ID
	`

	QGetSessionStartInfo = `
		SELECT 
			S.*,
			(SELECT COUNT(1) FROM SESSION_PROXY SP WHERE SP.SESSION_ID = S.ID) PROX_COUNT,
			coalesce(M.TYPE, '-') module_type 
		FROM SESSION S 
		LEFT JOIN MODULE M ON M.ID = S.MODULE_ID
		WHERE S.ID = $1
	`

	QCheckExists = `
		WITH F AS (
			SELECT "TYPE", DATA
			FROM SESSION_COMBOLIST_TMP WHERE SESSION_ID = $1
		)
		SELECT
			(SELECT COUNT(1) FROM F WHERE "TYPE" = 'DATABASE_ID') H_COUNT,
			(SELECT COUNT(1) FROM F WHERE "TYPE" = 'USERNAME_ID') U_COUNT,
			(SELECT COUNT(1) FROM F WHERE "TYPE" = 'PASSWORD_ID') P_COUNT
		;
	`

	QSessionInfo = `
		SELECT 
			S.ID, S.NAME, S.CREATE_TIME, RS.NAME status, 
			
			IIF(S.database_id = -2, 'Из файла', COALESCE(DH.NAME, 'Не выбрана'))  	database_name,
			IIF(S.username_id = -2, 'Из файла', COALESCE(DU.NAME, 'Не выбрана'))		username_name,
			IIF(S.password_id = -2, 'Из файла', COALESCE(DP.NAME, 'Не выбрана'))		password_name,
			IIF(S.PROXY_ID    = -2, 'Из файла', COALESCE(P.NAME, 'Без прокси' ))		proxy_name,
			COALESCE(M.NAME||'('||RM.NAME||')', 'Не выбран' ) 										  module_name,
			
			COALESCE(S.START_TIME, 'Не начато') 			start_time, 
			COALESCE(S.FINISH_TIME, 'Не закончено') 	finish_time,
			
			S.ERRORS, S.WORKER_COUNT, S.TIMEOUT, S.MODULE_ID, M.TYPE module_type
		FROM SESSION S
		LEFT JOIN REFERENCE RS ON RS.ID = S.STATUS
		LEFT JOIN DATABASE DH ON DH.ID = S.DATABASE_ID
		LEFT JOIN DATABASE DU ON DU.ID = S.USERNAME_ID
		LEFT JOIN DATABASE DP ON DP.ID = S.PASSWORD_ID
		LEFT JOIN PROXY P ON P.ID = S.PROXY_ID
		LEFT JOIN MODULE M ON M.ID = S.MODULE_ID
		LEFT JOIN REFERENCE RM ON RM.ID = M.TYPE
		WHERE S.ID = $1
	`

	QSessionInfoInput = `
		SELECT
			MI.TYPE, MI.NAME, MI.DESCRIPTION, SD.VALUE
		FROM MODULE_INPUT MI
		LEFT JOIN SESSION_DTL SD ON SD.SESSION_ID = $1 AND SD.KEY = MI.TYPE AND SD.NAME = MI.NAME
		WHERE MI.ID = $2
	`

	QGetSessionStatistic = `
	SELECT 
		sd.data_status id, (SELECT NAME FROM REFERENCE R WHERE R.ID = SD.DATA_STATUS) name, COUNT(1) count 
	FROM SESSION_DATA_WEBAPI SD
	WHERE SD.SESSION_ID  = $1 AND DATA_STATUS IS NOT NULL
	GROUP BY SD.DATA_STATUS 
	
	UNION ALL
	
	SELECT 'RT3' id, NAME name, VALUE count FROM SESSION_DTL DTL
	WHERE DTL.SESSION_ID = $2 AND KEY = 'R1E'	
	`

	QGetSessionStatisticProtocol = `
		SELECT 
			DATA_STATUS id, (SELECT NAME FROM REFERENCE R WHERE R.ID = DATA_STATUS) name, COUNT(1) count 
		FROM SESSION_DATA_PROTOCOL
		WHERE SESSION_ID  = $1 AND DATA_STATUS IS NOT NULL
		GROUP BY DATA_STATUS 

		UNION ALL

		SELECT 'RT3' id, NAME name, VALUE count FROM SESSION_DTL DTL
		WHERE DTL.SESSION_ID = $2 AND KEY = 'R1E'
	`

	QGetModuleType = `
		SELECT M.TYPE FROM SESSION S
		INNER JOIN MODULE M ON S.MODULE_ID = M.ID
		WHERE S.ID = $1
	`

	QGetPercent = `
		WITH SESS as (
			SELECT DATA_STATUS 
			FROM SESSION_DATA_WEBAPI
			WHERE SESSION_ID  = $1
		),
		STAT AS (
			SELECT 
				(SELECT COUNT(1) FROM SESS S) combolistcount,
				(SELECT COUNT(1) FROM SESS S WHERE S.DATA_STATUS IS NOT NULL) passedcount
		)
		SELECT 
			S.combolistcount,
			S.passedcount,
			(S.combolistcount - S.passedcount) lastlines,
			CASE 
				WHEN S.combolistcount > 0 THEN ROUND((S.passedcount * 100.0) / S.combolistcount, 2)||'%'
				ELSE '0%'
			END AS percent,
			R.NAME STATUS_NAME, T.FINISH_TIME
		FROM STAT S, "SESSION" T, REFERENCE R
		WHERE T.ID = $2 AND R.ID = T.STATUS
	`

	QGetPercentProtocol = `
		WITH SDP AS (
			SELECT 1, DATA_STATUS FROM SESSION_DATA_PROTOCOL
			WHERE SESSION_ID = $1
		)
		SELECT 
			E.*,
			CASE 
				WHEN E.C_COUNT > 0 THEN ROUND((E.PD_COUNT * 100.0) / E.C_COUNT, 2)||'%'
				ELSE '0%'
			END AS percent
		FROM ( 
			SELECT
				COALESCE((SELECT VALUE FROM SESSION_DTL WHERE SESSION_ID = S.ID AND "KEY" = 'DATABASE_ID'), '0')	H_COUNT, 
				COALESCE((SELECT VALUE FROM SESSION_DTL WHERE SESSION_ID = S.ID AND "KEY" = 'USERNAME_ID'), '0') U_COUNT, 
				COALESCE((SELECT VALUE FROM SESSION_DTL WHERE SESSION_ID = S.ID AND "KEY" = 'PASSWORD_ID'), '0')	P_COUNT, 
				(SELECT COUNT(1) FROM SDP) C_COUNT,
				(SELECT COUNT(1) FROM SDP WHERE DATA_STATUS IS NOT NULL) PD_COUNT,
				(SELECT COUNT(1) FROM SDP WHERE DATA_STATUS IS NULL) L_COUNT,
				R.NAME STATUS_NAME, S.FINISH_TIME
			FROM SESSION S
			INNER JOIN REFERENCE R ON R.ID = S.STATUS
			WHERE s.id = $2
		) E
	`

	QUpdateDatabase = `
		UPDATE DATABASE 
		SET STATUS = (
			CASE 
				WHEN EXISTS(SELECT 1 FROM DATABASE_LINK WHERE DATABASE_ID = $1 AND STATUS = 'ST3') THEN 'ST3'
				WHEN NOT EXISTS(SELECT 1 FROM DATABASE_LINK WHERE DATABASE_ID = $2 AND STATUS IN ('ST1','ST2','ST3')) THEN 'ST4'
				ELSE 'ST1'
			END
		)
		WHERE ID = $3
	`

	QLoginInDataBase = `
		SELECT 
			U.ID USER_ID, U.USERNAME USER_NAME, R.NAME ROLE_NAME 
		FROM USER U
		INNER JOIN REFERENCE R ON U.ROLE_ID = R.ID AND R."GROUP" = 'USER'
		WHERE U.USERNAME = $1 AND U.PASSWORD = $2
	`

	QComboListInfo = `
		SELECT
			D.ID, D.NAME, D.CREATE_TIME, RT.NAME type, RS.NAME status,
			(SELECT COUNT(1) FROM DATABASE_LINK_DATA DLD WHERE DLD.DATABASE_ID = D.ID) lines_count,
			D.P_ID, RD.NAME data_type 
		FROM DATABASE D 
		LEFT JOIN REFERENCE RT ON RT.ID = D.TYPE
		LEFT JOIN REFERENCE RS ON RS.ID = D.STATUS
		LEFT JOIN REFERENCE RD ON RD.ID = D.DATA_TYPE
		WHERE D.ID = $1
	`

	QGetSessionPagesCount = `
		SELECT COUNT(1) C1 FROM (
			SELECT 1 FROM SESSION_DATA_WEBAPI 
			WHERE SESSION_ID = $1 AND DATA_STATUS IN (-_-)
			UNION ALL
			SELECT 1 FROM SESSION_DATA_WEBAPI
			WHERE $2 = 999 AND SESSION_ID = $3 AND DATA_STATUS IS NULL
		) 
	`

	QGetSessionPagesCountProtocol = `
		SELECT COUNT(1) C1 FROM SESSION_DATA_PROTOCOL
		WHERE SESSION_ID = $1 AND (DATA_STATUS IN (-_-) XXX)
	`

	QGetSessionResults = `
		WITH com AS (
			SELECT 
				COALESCE(RS.NAME, 'Остаток') status, SD."DATA", SDL.log, SD.DATA_STATUS  
			FROM SESSION_DATA_WEBAPI SD
			LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SD.SESSION_ID AND SD.ID = SDL.ID
			LEFT JOIN REFERENCE RS ON RS.ID = SD.DATA_STATUS
			WHERE SD.SESSION_ID = $1
		)
		SELECT 
			C.status, C.data data, C.log
		FROM com C
		WHERE C.DATA_STATUS IN (-_-) OR ($2 = 999 AND C.DATA_STATUS IS NULL)
		LIMIT $3 
		OFFSET $4
	`

	QGetSessionResultsProtocol = `
		SELECT 
			COALESCE(R.NAME, 'Остаток') status, SDP.H_DATA host, SDP.U_DATA login, SDP.P_DATA password, SDL.log 
		FROM SESSION_DATA_PROTOCOL SDP
		LEFT JOIN REFERENCE R ON SDP.DATA_STATUS = R.ID
		LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SDP.SESSION_ID AND SDL.CON_ID = SDP.DATA_CON_ID  
		WHERE SDP.SESSION_ID = $1 AND (SDP.DATA_STATUS IN (-_-) XXX)
		LIMIT $2
		OFFSET $3
	`

	QComboListLinksInfo = `
		SELECT 
			DL.ID, RS.NAME status, RL.NAME type,  
			(
				SELECT COUNT(1) FROM DATABASE_LINK_DATA DLD 
				WHERE DLD.DATABASE_ID = DL.DATABASE_ID AND DLD.DATABASE_LINK = DL.ID
			) "count", DL.LINK path, DL.ERR_TXT
		FROM DATABASE_LINK DL
		LEFT JOIN REFERENCE RS ON RS.ID = DL.STATUS 
		LEFT JOIN REFERENCE RL ON RL.ID = DL.LINK_TYPE
		WHERE DL.DATABASE_ID = $1	
	`

	QProxyPresetInfo = `
		SELECT
			P.ID, P.NAME, P.CREATE_TIME, P.USE_UPDATE, P.INTERVAL,
			(SELECT COUNT(1) FROM PROXY_LINK_DATA PLD WHERE PLD.PROXY_ID = P.ID) lines_count
		FROM PROXY P WHERE P.ID = $1	
	`

	QProxyPresetLinksInfo = `
		SELECT
			PL.ID, RS.NAME status, RL.NAME source_type, RP.NAME proxy_type, 
			(
				SELECT COUNT(1) FROM PROXY_LINK_DATA PLD
				WHERE PLD.PROXY_ID = PL.PROXY_ID AND PLD.PROXY_LINK = PL.ID
			) "count",
			PL.LINK path, PL.ERR_TXT
		FROM PROXY_LINK PL
		LEFT JOIN REFERENCE RS ON RS.ID = PL.STATUS
		LEFT JOIN REFERENCE RL ON RL.ID = PL.LINK_TYPE
		LEFT JOIN REFERENCE RP ON RP.ID = PL.PROXY_TYPE
		WHERE PL.PROXY_ID = $1
	`

	QInsertDatabase = `
		INSERT INTO DATABASE(NAME, P_ID, TYPE, DATA_TYPE, STATUS)
		VALUES($1, $2, $3, $4, $5);
	`

	QInsertDatabaseLink = `
		INSERT INTO DATABASE_LINK(DATABASE_ID, ID, LINK, STATUS, LINK_TYPE)
		VALUES($1, $2, $3, $4, $5);
	`

	QInsertTempCombolist = `
		INSERT INTO SESSION_COMBOLIST_TMP(SESSION_ID, TYPE, DATA)
		VALUES($1, $2, $3);
	`
	QDeleteTempCombolist = `
		DELETE FROM SESSION_COMBOLIST_TMP WHERE SESSION_ID = $1 AND "TYPE" = $2;
	`

	QGetSession = `
		SELECT m.type, s.status FROM SESSION S
		INNER JOIN MODULE M ON S.MODULE_ID = M.ID
		WHERE S.ID = $1
	`

	QInsertProxy = `
		INSERT INTO PROXY(NAME, INTERVAL, USE_UPDATE)
		VALUES($1, $2, $3);
	`

	QInsertProxyLink = `
		INSERT INTO PROXY_LINK(PROXY_ID, ID, LINK_TYPE, PROXY_TYPE, LINK, STATUS)
		VALUES($1, $2, $3, $4, $5, 'ST2');
	`

	QInsertDatabaseLinkData = `
		INSERT INTO DATABASE_LINK_DATA(DATABASE_ID, DATABASE_LINK, ID, DATA, CON_ID)
		VALUES($1, $2, $3, $4, $5);
	`

	QInsertProxyPresetLinkData = `
		INSERT INTO PROXY_LINK_DATA(PROXY_ID, PROXY_LINK, ID, HOST, PORT)
		VALUES($1, $2, $3, $4, $5);
	`

	QInsertSession = `
		INSERT INTO SESSION(NAME, STATUS, WORKER_COUNT, MODULE_ID, TIMEOUT)
		VALUES($1, 'ST1', (SELECT VALUE FROM SETTINGS WHERE KEY = 'THREADS'), $2, 
		(SELECT VALUE FROM SETTINGS WHERE KEY = 'TIMEOUT'));
	`

	QSessionInputFieldsInsert = `
		INSERT INTO SESSION_DTL(VALUE, SESSION_ID, KEY, NAME)
		VALUES($1, $2, $3, $4);
	`

	QSessionInputFieldsUpdate = `
		UPDATE SESSION_DTL SET
			VALUE = $1
		WHERE SESSION_ID = $2 AND KEY = $3 AND NAME = $4	
	`

	QisAbleToDelete = `
		SELECT 
			CASE 
				WHEN EXISTS(SELECT 1 FROM DATABASE D WHERE D.P_ID = $1) THEN 1
				WHEN EXISTS(SELECT 1 FROM SESSION  S WHERE S.DATABASE_ID = $2) THEN 2
				ELSE 0
			END isAble;
	`

	QVacuum = "VACUUM;"

	QDeleteComboList = `
		DELETE FROM DATABASE_LINK_DATA WHERE DATABASE_ID = $1;
		DELETE FROM DATABASE_LINK WHERE DATABASE_ID = $2;
		DELETE FROM DATABASE WHERE ID = $3;		
	`

	QDeleteProxyPreset = `
		DELETE FROM PROXY_LINK_DATA WHERE PROXY_ID = $1;
		DELETE FROM PROXY_LINK WHERE PROXY_ID = $2;
		DELETE FROM PROXY WHERE ID = $3;
	`

	QDeleteSession = `
		DELETE FROM SESSION WHERE ID = $1;
		DELETE FROM SESSION_DATA_WEBAPI WHERE SESSION_ID = $2;
		DELETE FROM SESSION_DATA_LOG WHERE SESSION_ID = $3;
		DELETE FROM SESSION_DATA_PROTOCOL WHERE SESSION_ID = $6;
		DELETE FROM SESSION_DTL WHERE SESSION_ID = $4;
		DELETE FROM SESSION_PROXY WHERE SESSION_ID = $5;
	`

	QInsertSessionProxy = `
		INSERT INTO SESSION_PROXY(SESSION_ID, HOST, PORT, TYPE)
		VALUES($1, $2, $3, $4);
	`
	QInsertSessionDTLTimeOut = `
		INSERT INTO SESSION_DTL(SESSION_ID, KEY, VALUE, NAME)
		VALUES($1, $2, $3, $4);
	`

	QInsertModule = `
		INSERT INTO MODULE(NAME, VERSION, AUTHOR, DATA_TYPE, PATH, TYPE)
		VALUES($1, $2, $3, $4, $5, $6);
	`

	QInsertModuleFields = `
		INSERT INTO MODULE_INPUT(ID, TYPE, NAME, DESCRIPTION)
		VALUES($1, $2, $3, $4);		
	`

	QueryALL = `
	SELECT 
		coalesce(status,'') st, coalesce(data,'') da, coalesce(log, '') lo
	FROM (
		SELECT
			RS.NAME status, SD.data, SDL.LOG
		FROM SESSION_DATA_WEBAPI SD
		LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SD.SESSION_ID AND SD.ID = SDL.ID
		INNER JOIN REFERENCE RS ON RS.ID = SD.DATA_STATUS
		WHERE SD.SESSION_ID = $1
	
		UNION ALL
	
		SELECT
			'Остаток' status, S.data, null log
		FROM SESSION_DATA_WEBAPI S
		WHERE S.ID = $2 AND S.DATA_STATUS IS NULL
	)
	`

	QueryAllProtocol = `
		SELECT 
			COALESCE(R.NAME, 'Остаток') status, SDP.H_DATA host, SDP.U_DATA login, SDP.P_DATA password, COALESCE(SDL.LOG, '') log 
		FROM SESSION_DATA_PROTOCOL SDP
		LEFT JOIN REFERENCE R ON SDP.DATA_STATUS = R.ID
		LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SDP.SESSION_ID AND SDL.CON_ID = SDP.DATA_CON_ID  
		WHERE SDP.SESSION_ID = $1
	`

	QuerySelected = `
	SELECT 
		coalesce(status,'') st, coalesce(data,'') da, coalesce(log, '') lo
	FROM (
		SELECT
			RS.NAME status, SD.data, SDL.LOG
		FROM SESSION_DATA_WEBAPI SD
		LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SD.SESSION_ID AND SD.ID = SDL.ID
		INNER JOIN REFERENCE RS ON RS.ID = SD.DATA_STATUS
		WHERE SD.SESSION_ID = $1 and SD.DATA_STATUS IN (-_-)
	
		UNION ALL
	
		SELECT
			'Остаток' status, S.data, null log
		FROM SESSION_DATA_WEBAPI S
		WHERE $2 = 999 and S.ID = $3 AND S.DATA_STATUS IS NULL
	)
	`

	QuerySelectedProtocol = `
		SELECT 
			COALESCE(R.NAME, 'Остаток') status, SDP.H_DATA host, SDP.U_DATA login, SDP.P_DATA password, COALESCE(SDL.LOG, '') log
		FROM SESSION_DATA_PROTOCOL SDP
		LEFT JOIN REFERENCE R ON SDP.DATA_STATUS = R.ID
		LEFT JOIN SESSION_DATA_LOG SDL ON SDL.SESSION_ID = SDP.SESSION_ID AND SDL.CON_ID = SDP.DATA_CON_ID  
		WHERE SDP.SESSION_ID = $1 AND (SDP.DATA_STATUS IN (-_-) XXX)
	`
)
